/* eslint-disable @typescript-eslint/ban-ts-comment */

// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from 'react'

export type RegistryIndexFile = {
    path: string
    type: string
    target?: string
    content?: string
    githubUrl?: string
}
export type RegistryIndexItem = {
    name: string
    description?: string
    type: string
    registryDependencies?: string[]
    files: RegistryIndexFile[]
    component: React.LazyExoticComponent<React.ComponentType<object>> | null
    dependencies?: string[]
    categories?: string[]
    meta?: Record<string, unknown>
}

export const Index: Record<string, RegistryIndexItem> = {
    'action-button': {
        name: 'action-button',
        description: 'A button that displays a popup when clicked',
        type: 'registry:component',
        registryDependencies: ['button'],
        files: [
            {
                path: 'registry/new-york/components/action-button.tsx',
                type: 'registry:ui',
                target: '',
                githubUrl:
                    'https://github.com/apix-js/shadix-ui/tree/main/registry/new-york/components/action-button.tsx',
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                '@/registry/new-york/components/action-button.tsx'
            )
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof (mod as Record<string, unknown>)[key] ===
                            'function' ||
                        typeof (mod as Record<string, unknown>)[key] ===
                            'object'
                ) || 'action-button'
            return {
                default: (mod as Record<string, unknown>)[
                    exportName
                ] as React.ComponentType<object>,
            }
        }),
        dependencies: ['class-variance-authority', 'framer-motion'],
        categories: undefined,
        meta: {
            api: [
                {
                    name: 'children',
                    type: 'React.ReactNode',
                    description: 'Button content',
                    required: true,
                },
                {
                    name: 'onConfirm',
                    type: '() => Promise<{message?: string, error?: boolean}>',
                    description: 'Function to execute on confirmation',
                    required: true,
                },
                {
                    name: 'popupContent',
                    type: 'React.ReactNode',
                    description: 'Content to show in popup',
                    required: true,
                },
                {
                    name: 'className',
                    type: 'string',
                    description: 'Additional CSS class names for the button',
                    required: false,
                },
                {
                    name: 'variant',
                    type: "'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link'",
                    description: 'Button variant',
                    required: false,
                },
                {
                    name: 'size',
                    type: "'default' | 'sm' | 'lg' | 'icon' | 'icon-sm' | 'icon-lg'",
                    description: 'Button size',
                    required: false,
                },
                {
                    name: 'disabled',
                    type: 'boolean',
                    description: 'Disable the button if true',
                    required: false,
                },
                {
                    name: 'onClick',
                    type: '() => void',
                    description: 'Optional onClick handler',
                    required: false,
                },
            ],
        },
    },
    'action-button-demo': {
        name: 'action-button-demo',
        description: '',
        type: 'registry:demo',
        registryDependencies: undefined,
        files: [
            {
                path: 'registry/new-york/demos/action-button.demo.tsx',
                type: 'registry:demo',
                target: '',
                githubUrl:
                    'https://github.com/apix-js/shadix-ui/tree/main/registry/new-york/demos/action-button.demo.tsx',
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                '@/registry/new-york/demos/action-button.demo.tsx'
            )
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof (mod as Record<string, unknown>)[key] ===
                            'function' ||
                        typeof (mod as Record<string, unknown>)[key] ===
                            'object'
                ) || 'action-button-demo'
            return {
                default: (mod as Record<string, unknown>)[
                    exportName
                ] as React.ComponentType<object>,
            }
        }),
        dependencies: undefined,
        categories: undefined,
        meta: undefined,
    },
}
